openapi: 3.0.3
info:
  title: MovieTrack API
  version: 1.0.0
  description: API REST para gestión de películas, series, géneros, personas, actores, directores, reseñas y listas personalizadas. DOCUMENTACIÓN EN PROCESO (Disponible Producciones, Géneros, Personas, Actores y Directores)

servers:
  - url: https://movietrackapi.up.railway.app/api/v1
    description: Producción
  - url: https://movietrackapi.up.railway.app/api
    description: Usuarios

paths:

  /producciones:
    get:
      summary: Obtener todas las producciones
      tags: [Producciones]
      parameters:
        - in: query
          name: tipo[eq]
          schema:
            type: string
            enum: [pelicula, serie]
          description: Filtrar producciones por tipo
        - in: query
          name: titulo[like]
          schema:
            type: string
          description: Filtrar por coincidencia parcial en el título o título original
      responses:
        '200':
          description: Lista de producciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Produccion'
    post:
      summary: Crear una nueva producción
      tags: [Producciones]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produccion'
      responses:
        '201':
          description: Producción creada correctamente
        '401':
          description: No autorizado
          
  /producciones/bulk:
    post:
      summary: Crear múltiples producciones
      tags: [Producciones]
      security:
        - bearerAuth: []
      requestBody:
        description: Lista de producciones a insertar
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Produccion'
      responses:
        '201':
          description: Producciones creadas correctamente
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado

  /producciones/{id}:
    get:
      summary: Obtener una producción por ID
      tags: [Producciones]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: query
          name: detalles
          required: false
          schema:
            type: boolean
          description: Incluir actores y director de la producción
      responses:
        '200':
          description: Producción encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produccion'
        '404':
          description: Producción no encontrada

    put:
      summary: Actualizar completamente una producción
      tags: [Producciones]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produccion'
      responses:
        '200':
          description: Producción actualizada correctamente
        '404':
          description: Producción no encontrada
        '401':
          description: No autorizado

    patch:
      summary: Actualizar parcialmente una producción
      tags: [Producciones]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produccion'
      responses:
        '200':
          description: Producción actualizada parcialmente
        '404':
          description: Producción no encontrada
        '401':
          description: No autorizado

    delete:
      summary: Eliminar una producción
      tags: [Producciones]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Producción eliminada correctamente
        '404':
          description: Producción no encontrada
        '401':
          description: No autorizado
          
  /generos:
    get:
      summary: Obtener todos los géneros
      tags: [Géneros]
      responses:
        '200':
          description: Lista de géneros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Genero'
    post:
      summary: Crear un nuevo género
      tags: [Géneros]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genero'
      responses:
        '201':
          description: Género creado
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado
  
  /generos/bulk:
    post:
      summary: Crear múltiples géneros
      tags: [Géneros]
      security:
        - bearerAuth: []
      requestBody:
        description: Lista de géneros a insertar
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Genero'
      responses:
        '201':
          description: Géneros creados correctamente
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado

  /generos/{id}:
    get:
      summary: Obtener un género por ID
      tags: [Géneros]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Género encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genero'
        '404':
          description: Género no encontrado

    put:
      summary: Actualizar un género (reemplazo total)
      tags: [Géneros]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genero'
      responses:
        '200':
          description: Género actualizado correctamente
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado
        '404':
          description: Género no encontrado

    delete:
      summary: Eliminar un género
      tags: [Géneros]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Género eliminado
        '401':
          description: No autorizado
        '404':
          description: Género no encontrado
          
  /personas:
    get:
      summary: Obtener todas las personas
      tags: [Personas]
      parameters:
        - in: query
          name: nombre[eq]
          schema:
            type: string
          description: Filtrar personas por nombre
      responses:
        '200':
          description: Lista de personas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Persona'
    post:
      summary: Crear una nueva persona
      tags: [Personas]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona'
      responses:
        '201':
          description: Persona creada correctamente
        '401':
          description: No autorizado
          
  /personas/bulk:
    post:
      summary: Crear múltiples personas
      tags: [Personas]
      security:
        - bearerAuth: []
      requestBody:
        description: Lista de personas a insertar
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Persona'
      responses:
        '201':
          description: Personas creadas correctamente
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado

  /personas/{id}:
    get:
      summary: Obtener una persona por ID
      tags: [Personas]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Persona encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona'
        '404':
          description: Persona no encontrada

    put:
      summary: Actualizar completamente una persona
      tags: [Personas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona'
      responses:
        '200':
          description: Persona actualizada correctamente
        '404':
          description: Persona no encontrada
        '401':
          description: No autorizado

    patch:
      summary: Actualizar parcialmente una persona
      tags: [Personas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona'
      responses:
        '200':
          description: Persona actualizada parcialmente
        '404':
          description: Persona no encontrada
        '401':
          description: No autorizado

    delete:
      summary: Eliminar una persona
      tags: [Personas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Persona eliminada correctamente
        '404':
          description: Persona no encontrada
        '401':
          description: No autorizado

  /actores:
    get:
      summary: Obtener todos los actores
      tags: [Actores]
      responses:
        '200':
          description: Lista de actores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Actor'
    post:
      summary: Crear un nuevo actor
      tags: [Actores]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
      responses:
        '201':
          description: Actor creado
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado

  /actores/bulk:
    post:
      summary: Crear múltiples actores
      tags: [Actores]
      security:
        - bearerAuth: []
      requestBody:
        description: Lista de actores a insertar
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Actor'
      responses:
        '201':
          description: Actor creadas correctamente
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado

  /actores/{id}:
    put:
      summary: Actualizar un actor
      tags: [Actores]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
      responses:
        '200':
          description: Actor actualizado correctamente
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado
        '404':
          description: Actor no encontrado

    delete:
      summary: Eliminar un actor
      tags: [Actores]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Actor eliminado
        '401':
          description: No autorizado
        '404':
          description: Actor no encontrado
          
  /directores:
    get:
      summary: Obtener todos los directores
      tags: [Directores]
      responses:
        '200':
          description: Lista de directores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Director'
    post:
      summary: Crear un nuevo director
      tags: [Directores]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Director'
      responses:
        '201':
          description: Director creado
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado

  /directores/bulk:
    post:
      summary: Crear múltiples directores
      tags: [Directores]
      security:
        - bearerAuth: []
      requestBody:
        description: Lista de directores a insertar
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Director'
      responses:
        '201':
          description: Directores creados correctamente
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado

  /directores/{id}:
    put:
      summary: Actualizar un director
      tags: [Directores]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Director'
      responses:
        '200':
          description: Director actualizado correctamente
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado
        '404':
          description: Director no encontrado

    delete:
      summary: Eliminar un director
      tags: [Directores]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Director eliminado
        '401':
          description: No autorizado
        '404':
          description: Director no encontrado

  /resenas:
    get:
      summary: Obtener todas las reseñas
      tags: [Reseñas]
      parameters:
        - in: query
          name: usuario_id[eq]
          schema:
            type: integer
          description: Filtrar reseñas por usuario
        - in: query
          name: produccion_id[eq]
          schema:
            type: integer
          description: Filtrar reseñas por produccion
      responses:
        '200':
          description: Lista de reseñas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resena'
    post:
      summary: Crear una nueva reseña
      tags: [Reseñas]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resena'
      responses:
        '201':
          description: Reseña creada
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado

  /resenas/{id}:
    get:
      summary: Obtener una reseña por ID
      tags: [Reseñas]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Reseña encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resena'
        '404':
          description: Reseña no encontrada

    put:
      summary: Actualizar una Reseña (reemplazo total)
      tags: [Reseñas]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resena'
      responses:
        '200':
          description: Reseña actualizada correctamente
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado // El código de usuario no coincide con tu usuario
        '404':
          description: Reseña no encontrada
          
    patch:
      summary: Actualizar parcialmente una reseña
      tags: [Reseñas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resena'
      responses:
        '200':
          description: Reseña actualizada parcialmente
        '404':
          description: Reseña no encontrada
        '401':
          description: No autorizado // El código de usuario no coincide con tu usuario

    delete:
      summary: Eliminar una reseña
      tags: [Reseñas]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Reseña eliminada
        '401':
          description: No autorizado // El código de usuario no coincide con tu usuario
        '404':
          description: Reseña no encontrada
          
  /marcarProducciones:
    post:
      summary: Crear una nueva marca
      tags: [Marcar Producciones]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarcarProducciones'
      responses:
        '201':
          description: Marca creada
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado // El código de usuario no coincide con tu usuario

  /marcarProducciones/{id}:
    get:
      summary: Obtener una marca por ID
      tags: [Marcar Producciones]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Marca encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarcarProducciones'
        '404':
          description: Marca no encontrada
        '401':
          description: No autorizado // El código de usuario no coincide con tu usuario

    put:
      summary: Actualizar una Marca (reemplazo total)
      tags: [Marcar Producciones]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarcarProducciones'
      responses:
        '200':
          description: Marca actualizada correctamente
        '400':
          description: Datos inválidos
        '401':
          description: No autorizado // El código de usuario no coincide con tu usuario
        '404':
          description: Marca no encontrada
          
    patch:
      summary: Actualizar parcialmente una marca
      tags: [Marcar Producciones]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarcarProducciones'
      responses:
        '200':
          description: Marca actualizada parcialmente
        '404':
          description: Marca no encontrada
        '401':
          description: No autorizado // El código de usuario no coincide con tu usuario

    delete:
      summary: Eliminar una marca
      tags: [Marcar Producciones]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Marca eliminada
        '401':
          description: No autorizado // El código de usuario no coincide con tu usuario
        '404':
          description: Marca no encontrada

  /register:
    post:
      summary: Registrar un nuevo usuario
      tags: [Usuarios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NuevoUsuario'
      responses:
        '201':
          description: Usuario creada
        '400':
          description: Datos inválidos
  
  /login:
    post:
      summary: Iniciar sesión con un usuario
      tags: [Usuarios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '201':
          description: Sesión Iniciada
        '400':
          description: Correo o contraseña incorrectos
  
  /user:
    get:
      summary: Obtener los datos del usuario por token
      tags: [Usuarios]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NuevoUsuario'
        '404':
          description: Usuario no encontrado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Produccion:
      type: object
      required: [titulo, tipo, genero_id, sinopsis, duracion, fecha_estreno, poster, puntuacion_critica, puntuacion_usuarios]
      properties:
        titulo: { type: string }
        titulo_original: { type: string }
        tipo: { type: string, enum: [Pelicula, Serie] }
        genero_id: { type: integer }
        sinopsis: { type: string }
        duracion: { type: integer }
        fecha_estreno: { type: string, format: date }
        poster: { type: string }
        puntuacion_critica: { type: number }
        puntuacion_usuarios: { type: number }

    Genero:
      type: object
      required: [nombre]
      properties:
        nombre: { type: string }

    Persona:
      type: object
      required: [nombre, fecha_nacimiento, biografia]
      properties:
        nombre: { type: string }
        fecha_nacimiento: { type: string, format: date }
        biografia: { type: string }

    Actor:
      type: object
      required: [persona_id, produccion_id, rol]
      properties:
        persona_id: { type: integer }
        produccion_id: { type: integer }
        rol: { type: string }
        
    Director:
      type: object
      required: [persona_id, produccion_id]
      properties:
        persona_id: { type: integer }
        produccion_id: { type: integer }
        
    Resena:
      type: object
      required: [usuario_id, produccion_id, puntuacion]
      properties:
        usuario_id: { type: integer }
        produccion_id: { type: integer }
        puntuacion: { type: integer }
        descripcion: { type: string }
        
    MarcarProducciones:
      type: object
      required: [usuario_id, produccion_id]
      properties:
        usuario_id: { type: integer }
        produccion_id: { type: integer }
        marca: { type: string, enum: [0 (Visto), 1 (Quiero Ver)] }
        favorita: { type: boolean }
        
    ListaPersonalizada:
      type: object
      required: [nombre, usuario_id]
      properties:
        nombre: { type: string }
        usuario_id: { type: integer }
        descripcion: { type: string }

    ProduccionLista:
      type: object
      required: [lista_personalizada_id, produccion_id]
      properties:
        lista_personalizada_id: { type: integer }
        produccion_id: { type: integer }
        
    NuevoUsuario:
      type: object
      required: [name, email, password]
      properties:
        name: { type: string }
        email: { type: string }
        password: { type: string }
        
    Usuario:
      type: object
      required: [email, password]
      properties:
        email: { type: string }
        password: { type: string }
